<xsection = [Help Topics]>
Welcome to X-TOOLSS help.
Select one of the topics to the left to view information on that topic.
</xsection>

<xsection = [Help Topics, Setting up a Module]>
Each X-TOOLSS application consists of a module. A module consists of a module (.xts) file, an input file, a code file, and an output file. All of these files should be placed in the same directory on the computer. When the module is executed within X-TOOLSS, values of the input variables will be sent to the input file (1 per line), the codefile will be executed (this should read the values of the input variables from the input file and print the fitness value to the output file), and the fitness value will be read from the output file and printed to the screen.
</xsection>

<xsection = [Help Topics, Setting up a Module, Creating a Module (.xts) File]>
Each module file consists of the following information:
- Input variables (variable name, range, and type)
- Input file name
- Codefile name and type
- Output variable name (fitness variable)
- Output file name

For example, if a module consisted of input variables a, b, and c (of type integer, float, and double  with ranges of 300 to 700, 400 to 500, and 1 to 1000, respectively); input file infile.input; codefile code.java; output variable fitness; and output file outfile.output; the module file should look as follows:

input:
define a: [300..700]: int;
define b: [400..500]: float;
define c: [1..1000]: double;

inputfile:
infile.input;

codefile:
code.java : java;

output:
define fitness;

outputfile:
outfile.output;

Comments can also be included within the program, but must begin with a # on each line:
# This is an example of a comment.

A module file can be created in any text editing program, but MUST have the extension .xts.
</xsection>

<xsection = [Help Topics, Setting up a Module, Creating an Input File and Output File]>
The input and output file can have any file extension, but MUST be included in the same directory as the module file. The input file will be edited by X-TOOLSS and will include a variable value on each line (these will be printed in the order in which the variables are listed in the module file). The output file should be created by the codefile, and must include only the fitness value on one line.

*IMPORTANT: Make sure that the input and output file have the same name in the module as they do in the codefile.  If they do not match, X-TOOLSS will not be able to communicate with the fitness function.
</xsection>

<xsection = [Help Topics, Setting up a Module, Creating a Codefile]>
A codefile should be created by the user and must do the following:
- Read the input variable values from the input file (1 per line)
- Use the input variable values to create a fitness value
- Print the fitness value to the output file

After X-TOOLSS prints the input variable values to the input file in the order listed in the module file (these will be printed 1 per line), it will automatically execute the codefile and read the fitness value from the output file. The codefile must be in the same directory as the module file.
</xsection>


<xsection = [Help Topics, Using a Module in X-TOOLSS]>
After a module is inserted into X-TOOLSS, variables within that module can be viewed on the X-TOOLSS menu. Input variables can be set to constant so that they remain at a fixed value throughout each execution of a module s codefile.
</xsection>

<xsection = [Help Topics, Using a Module in X-TOOLSS, Specifying a Module in X-TOOLSS]>
On the first menu within X-TOOLSS, a module file must specified in the module window.  To accomplish this, select the Browse option to find a module file on the computer.

Only files with the extension .xts will be accepted into the module window in X-TOOLSS (Windows Only). After the Next button is pressed, X-TOOLSS will check the module file for possible errors. If no errors are found, X-TOOLSS will move to the next menu
</xsection>

<xsection = [Help Topics, Using a Module in X-TOOLSS, Viewing Variables in X-TOOLSS]>
In the second menu of X-TOOLSS, the name and range of each variable will be displayed in the variable window as listed in the module file.
Variables can be set to a constant value using the Set Constant button, and can be restored to their original ranged value using the Reset Value button (this does not modify the module file).
</xsection>


<xsection = [Help Topics, X-TOOLSS Output Options]>
X-TOOLSS provides a variety of outputs for monitoring the state of the system. When an EC is executed, an output window is displayed which contains summary information about the evolution. Additionally, several files may be created within the working directory for each optimization, each located in a sub-folder where the .xts file is located, and each having the appropriate extension as described in the following sections.
</xsection>

<xsection = [Help Topics, X-TOOLSS Output Options, Output Window]>
The output window gives the user access to both the current best individual as well as the entire specification of the current population. The window has a set of radio buttons that enable the user to select the amount of information that can be viewed.

The options are  No Results  (all output is hidden),  Generation Best Only  (only show the best individual found in the current generation), and  Current Population  (show all information related to the current population, including all individuals, function evaluations processed, etc.). The  Log Interval  parameter controls the frequency with which this information is posted to the screen. If the log interval is set to be greater than the maximum number of function evaluations, then only the final population of each run will be displayed.
</xsection>

<xsection = [Help Topics, X-TOOLSS Output Options, LOG File]>
This file, if enabled, contains every individual that has been created by the EC, ordered by creation time from oldest to newest. Each individual is on a separate line, and attributes of each individual are separated a space. The LOG file can be disabled by turning off logging. It should be noted that storing every individual to a file is not only storage-intensive but also time-intensive.
</xsection>

<xsection = [Help Topics, X-TOOLSS Output Options, OUT File]>
This file is a copy of the  Current Population  information that was displayed to the screen. The frequency with which this information is written and displayed is controlled by a parameter to the system called  Log Interval , which will be described later. The OUT file is always created, but if the log interval is set to be greater than the maximum number of function evaluations, then only the final population of each run will be stored.
</xsection>

<xsection = [Help Topics, X-TOOLSS Output Options, STAT File]>
This file contains the best fitness found for each run of the EC (if multiple runs are used). Each fitness value is stored on a separate line. The STAT file enables the user to easily calculate statistics based on the results of all runs. The STAT file is always created, regardless of the logging or log interval parameters.
</xsection>


<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms]>
Select one of the GAs to the left to view a description of that GA.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Generational GA with BLX]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Number of Elites   The number of best individuals that will survive to the next generation.

· Crossover Usage Rate   The probability that an individual will undergo crossover (i.e., recombination).

· BLX-alpha   The alpha parameter for blend crossover. The values for alpha should lie in the interval [0.0, 0.5]. Alpha values greater than 0.0 cause blend crossover to also introduce a  mutation  as well, and the higher the alpha value, the greater this mutation becomes.

· Mutation Usage Rate   The probability that an individual will undergo mutation.

· Mutation Rate   The probability that an allele (i.e., a component of an individual) will undergo mutation.

· Mutation Range   The percentage of an allele s total range that is used as the standard deviation for the Gaussian mutation.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Steady-state GA]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Crossover Usage Rate   The probability that an individual will undergo crossover (i.e., recombination).

· Mutation Usage Rate   The probability that an individual will undergo mutation.

· Mutation Rate   The probability that an allele (i.e., a component of an individual) will undergo mutation.

· Mutation Range   The percentage of an allele s total range that is used as the standard deviation for the Gaussian mutation.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Steady-state GA with BLX]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Crossover Usage Rate   The probability that an individual will undergo crossover (i.e., recombination).

· BLX-alpha   The alpha parameter for blend crossover. The values for alpha should lie in the interval [0.0, 0.5]. Alpha values greater than 0.0 cause blend crossover to also introduce a  mutation  as well, and the higher the alpha value, the greater this mutation becomes.

· Mutation Usage Rate   The probability that an individual will undergo mutation.

· Mutation Rate   The probability that an allele (i.e., a component of an individual) will undergo mutation.

· Mutation Range   The percentage of an allele s total range that is used as the standard deviation for the Gaussian mutation.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Steady-generational GA with BLX]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Crossover Usage Rate   The probability that an individual will undergo crossover (i.e., recombination).

· BLX-alpha   The alpha parameter for blend crossover. The values for alpha should lie in the interval [0.0, 0.5]. Alpha values greater than 0.0 cause blend crossover to also introduce a  mutation  as
well, and the higher the alpha value, the greater this mutation becomes.

· Mutation Usage Rate   The probability that an individual will undergo mutation.

· Mutation Rate   The probability that an allele (i.e., a component of an individual) will undergo mutation.

· Mutation Range   The percentage of an allele s total range that is used as the standard deviation for the Gaussian mutation.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, PSO]>
Some description goes here.

Parameters:

· Number of Particles   The number of individuals that exist in the population at any one time.

· Neighborhood Size   The number of best individuals that will survive to the next generation.

· Constriction Coefficient?   The probability that an individual will undergo crossover (i.e., recombination).

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Steady-state DEA]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Phi   The number of best individuals that will survive to the next generation.

· Mutation Usage Rate   The probability that an individual will undergo mutation.

· Mutation Rate   The probability that an allele (i.e., a component of an individual) will undergo mutation.

· Mutation Range   The percentage of an allele s total range that is used as the standard deviation for the Gaussian mutation.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Generational DEA]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Number of Elites   The number of best individuals that will survive to the next generation.

· Phi   The probability that an individual will undergo crossover (i.e., recombination).

· Mutation Usage Rate   The probability that an individual will undergo mutation.

· Mutation Rate   The probability that an allele (i.e., a component of an individual) will undergo mutation.

· Mutation Range   The percentage of an allele s total range that is used as the standard deviation for the Gaussian mutation.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Elitist EDA]>
Some description goes here.

Parameters:
· Population Size   The number of individuals that exist in the population at any one time.

· Number of Elites   The number of best individuals that will survive to the next generation.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Standard EP]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Continuous Standard EP]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Meta-EP]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Eta Mutation Rate   The number of best individuals that will survive to the next generation.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>

<xsection = [Help Topics, X-TOOLSS Evolutionary Computation Algorithms, Continuous Meta-EP]>
Some description goes here.

Parameters:

· Population Size   The number of individuals that exist in the population at any one time.

· Eta Mutation Rate   The number of best individuals that will survive to the next generation.

· Total Evaluations   The number of function evaluations to perform before termination.

· Number of Runs   The number of independent runs to perform.

· Number of Threads   The number of independent threads to divide the specified number of runs into.

· Log Results?   If  YES , then every individual that is created will be stored in the file X-TOOLSS.log. If  NO , then a full record of individuals will not be kept.

· Log Interval   The number of function evaluations to execute between screen/file output. If this value is set to anything greater than the Total Evaluations, then only the final generation of each run will be output.
</xsection>